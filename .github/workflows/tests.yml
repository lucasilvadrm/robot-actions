name: E2E and API Tests

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest

    container:
      image: curlimages/curl:8.4.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Health Check
        run: |
          check_url() {
            response_code=$(curl -o /dev/null -w "%{http_code}" --location $1);
            if [ $response_code -ne 200 ]; then
              echo "Application at $1 is unavailable";
              exit 1;
            fi
          }

          case $PROJECT in
            web)
              check_url https://krotonqa.service-now.com/krotonpda?ra=
              ;;
            all_apis)
              check_url https://newidentity.krthomolog.com.br/swagger/index.html
              ;;
            *)
              echo "Unsupported project for health-check: $PROJECT"
              exit 1
              ;;
          esac

  web-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox]

    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node_version: 20
          python_version: 3.12

      - name: Browser init
        run: rfbrowser init

      - name: Run E2E Tests
        run: robot -d ./logs -v BROWSER:${{ matrix.browser }} tests/web

      - name: Reporter
        uses: ./.github/actions/reporter
        with:
          secret_github: ${{ secrets.GITHUB_TOKEN }}
          report_test_name: ${{ matrix.browser }}

  api-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node_version: 20
          python_version: 3.12

      - name: Run API Tests
        run: robot -d ./logs tests/api

      - name: Reporter
        uses: ./.github/actions/reporter
        with:
          secret_github: ${{ secrets.GITHUB_TOKEN }}
          report_test_name: API
